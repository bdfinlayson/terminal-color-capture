#!/usr/bin/env ruby
require 'highline/import'

$accepted_colors = ['red','blue','green','yellow','black','white','orange','purple']
$accepted_formats = ['none','bold','underline']

class ColorScheme

    attr_accessor :name,:text_color,:text_format,:background_color,:active_criteria

    def ask_for_name
        ask("What would you like to call this color scheme?:",String){|scheme_name|
        }
    end

    def ask_for_text_color
        ask("What color text would you like it to have?:",$accepted_colors){|text_color|
        }
    end

    def ask_for_text_format
        ask("What format would you like it to have? (i.e. none, bold, underline)",$accepted_formats){|text_format|
        }
    end

    def ask_for_background_color
        ask("What background color would you like?",$accepted_colors){|background_color|
        }
    end

    def ask_for_active_criteria
        ask("When would you like this scheme to be active? (hh:mm-hh:mm)",DateTime){|time_range|
        }
    end

    def create
        ask_for_name()
        ask_for_text_color()
        ask_for_text_format()
        ask_for_background_color()
        ask_for_active_criteria()
    end
end

choose do |menu|
  menu.prompt = "Hello, what would you like to do?\n"

  menu.choice(:CreateANewColorScheme) {
    name = ask("What would you like to call this color scheme?",String){|scheme_name|

        }
    if name.empty?
        puts "You must enter a name for this color scheme.\n"
        exit 0
    end
    text_color = ask("What color text would you like it to have?",$accepted_colors){|text_color|
            
        }
    text_format = ask("What format would you like it to have? (i.e. none, bold, underline)",$accepted_formats){|text_format|
            
        }
    background_color = ask("What background color would you like?",$accepted_colors){|background_color|
            
        }
    active_criteria = ask("When would you like this scheme to be active? (hh:mm-hh:mm)",DateTime){|time_range|
            
        }
    puts "New color scheme created successfully!\n"
  }
  menu.choice(:ViewExistingColorSchemes) { say("Not from around here, are you?") }
  menu.choice(:EditExistingColorScheme) { say("Not from around here, are you?") }
  menu.choice(:DeleteExistingColorScheme) { say("Not from around here, are you?") }
end